name: Deploy Articles 

on:
  workflow_dispatch:
    inputs:
      message:
        description: "Optionaler Nachrichtentext"
        required: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: sudo apt-get install -y curl jq

      - name: "Debug: Lade Artikel von Supabase"
        env:
          SUPABASE_URL: https://ngtujvgsbymtxphwncuj.supabase.co
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        run: |
          mkdir -p articles
          echo "Liste der Artikel abrufen..."
          resp=$(curl -s "$SUPABASE_URL/storage/v1/object/list/articles" \
            -H "Authorization: Bearer $SUPABASE_KEY")

          # Ausgabe der Rohdaten
          echo "Supabase raw response:"
          echo "$resp" | jq .

          # Pr√ºfen ob data null ist
          if [ "$(echo "$resp" | jq '.data')" = "null" ]; then
            echo "Fehler: Supabase returned null, keine Artikel gefunden oder falscher Key/URL"
            exit 1
          fi

          # Alle Dateinamen extrahieren
          files=$(echo "$resp" | jq -r '.data[]?.name // empty')
          if [ -z "$files" ]; then
            echo "Keine Artikel gefunden, Workflow beendet."
            exit 0
          fi

          # Artikel herunterladen
          for f in $files; do
            curl -s "$SUPABASE_URL/storage/v1/object/articles/$f" \
              -H "Authorization: Bearer $SUPABASE_KEY" \
              -o "articles/$f"
          done

      - name: Konvertiere Artikel zu HTML
        run: |
          mkdir -p public
          for file in articles/*; do
            name=$(basename "$file" .txt)
            echo "<!DOCTYPE html><html><head><meta charset='utf-8'><title>$name</title></head><body><article>" > public/$name.html
            cat "$file" >> public/$name.html
            echo "</article></body></html>" >> public/$name.html
          done

      - name: Commit & Push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add public/
          git commit -m "Neue Artikel gebaut" || echo "Nichts zu committen"
          git push
